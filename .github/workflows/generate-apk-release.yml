name: Generated APK AAB (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: com.github.nikp123.racunica

on:
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Validate that none of the gradle jar files haven't been 
      # tampered with. Rude hackers >:(
      - uses: gradle/actions/wrapper-validation@v4

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up JDK
      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      - name: Decode and save keystore
        run: |
          mkdir -p private/keys
          echo "${{ secrets.APP_KEYSTORE }}" | base64 --decode > private/keys/github-release.jks

      # Create APK Release
      - name: Build apk release project (APK)
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PATH: private/keys/github-release.jks
          STORE_PASSWORD: ${{ secrets.APP_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.APP_KEYSTORE_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.APP_KEYSTORE_KEY_PASSWORD }}

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.repository_name }} - APK(s) release generated
          path: app/build/outputs/apk/release/

      # Get app version
      - name: Get version from build.gradle.kts
        id: get_version
        run: |
          VERSION_NAME=$(grep 'versionName' app/build.gradle.kts | awk '{print $3}' | tr -d '\"')
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

      # Upload the pre-release build
      - name: Create release
        uses: "softprops/action-gh-release@v2"
        with:
          name: "Development Build"
          body: These releases are meant for development purposes only!
            Use at your own discression.
          generate_release_notes: true
          append_body: true
          fail_on_unmatched_files: true
          files: |
            app/build/outputs/apk/release/*
          prerelease: true
          tag_name: ${{ env.VERSION_NAME }}
          token: "${{ secrets.GH_ACCESS_TOKEN }}"
